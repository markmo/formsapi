var React = require('react');
var request = require('superagent');
var fuelux = require('fuelux');
window.$ = window.jQuery = require('jquery');
var bootstrap = require('bootstrap');

var ds1url = window.apiBaseURL || '/api';

var Pillbox = React.createClass({displayName: "Pillbox",

  componentDidMount: function () {
    var source = this.props.source.replace('$ds1url', ds1url);
    var self = this;
    $('#' + this.props.field).pillbox({
      onKeyDown: function (event, callback) {
        // potential bug in fuelux
        // event.value is text entered as at previous keydown
        // leave as feature for now. first char will show all options
        var items;
        var src;
        var text = event.value && event.value.trim();
        if ('enum' in self.props) {
          if (text) {
            items = self.props.enum.filter(function (element) {
              return element.indexOf(text) === 0;
            });
          } else {
            items = self.props.enum;
          }
          return items.map(function (element) {
            return {
              text: element,
              value: element,
              attr: {},
              data: {}
            };
          })
        }
        if (text) {
          src = source + '/' + text;
        } else {
          src = source;
        }
        request
          .get(src)
          .end(function (res) {
            var items;
            if (self.isMounted()) {
              if (res.ok) {
                items = createItems(res.body);
                callback({data: items});
                //$('#' + self.props.field).pillbox('addItems', -1, items);
              }
            }
          });
      }
    });
  },

  render: function () {
    var pillbox = (
      React.createElement("div", {className: "fuelux"}, 
        React.createElement("div", {className: "pillbox", "data-initialize": "pillbox", id: this.props.field}, 
          React.createElement("ul", {className: "clearfix pill-group"}, 
            React.createElement("li", {className: "pillbox-input-wrap btn-group"}, 
              React.createElement("a", {className: "pillbox-more"}, "and ", React.createElement("span", {className: "pillbox-more-count"}), " more..."), 
              React.createElement("input", {type: "text", className: "form-control dropdown-toggle pillbox-add-item", placeholder: "add item"}), 
              React.createElement("button", {type: "button", className: "dropdown-toggle sr-only"}, 
                React.createElement("span", {className: "caret"}), 
                React.createElement("span", {className: "sr-only"}, "Toggle Dropdown")
              ), 
              React.createElement("ul", {className: "suggest dropdown-menu", role: "menu", "data-toggle": "dropdown", "data-flip": "auto"})
            )
          )
        )
      )
    );
    if (this.props.noContainer) {
      return pillbox;
    }
    var labelGridColumns = this.props.labelGridColumns || 2;
    var controlGridColumns = 12 - labelGridColumns;
    var control;
    if (this.props.formType === 'horizontal') {
      control = (
        React.createElement("div", {className: 'col-sm-' + controlGridColumns}, 
          pillbox
        )
      );
    } else {
      control = pillbox;
    }
    return (
      React.createElement("div", {className: "form-group"}, 
        React.createElement("label", {htmlFor: this.props.field, className: 'col-sm-' + labelGridColumns + ' control-label'}, this.props.title), 
        control
      )
    );
  }
});

function createItems(objs) {
  var items = objs.map(function (obj) {
    return {
      text: obj.name,
      value: obj.id + '',
      attr: {},
      data: {}
    };
  });
  return items;
}

module.exports = Pillbox;